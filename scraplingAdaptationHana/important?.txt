import asyncio
import json
from scrapling.fetchers import StealthyFetcher
from playwright.async_api import TimeoutError as PlaywrightTimeoutError
import random
import pandas as pd

SOURCE_DATA = "scraplingAdaptationHana/source_prices.xlsx"
OUTPUT_DATA = "harris_teeter_results.xlsx"
CHECKPOINT_FILE = "scraping_checkpoint_giant.json"
TEMP_RESULTS_FILE = "temp_session_results_giant.json"

async def fetch_upc_via_playwright(upc_list):
    async def page_action(page):
        # 1) Navigate to Giant homepage
        await page.goto("https://giantfood.com", timeout=30000)

        # 2) Fill in your ZIP code and submit
        #    (update these selectors if Giant changes them)
        await page.wait_for_selector('button.robot-shopping-mode-location', timeout=30000)
        await page.click('button.robot-shopping-mode-location', timeout=5000)
        await page.fill("input[name='zipCode']", "20010")  
        await page.click('#search-location', timeout = 5000)
        await page.wait_for_timeout(1000)
        address = page.locator("li", has_text="1345 Park Road N.W.")
        await address.locator("button").click(timeout=7000)
        # Wait a moment for any initial loading
        await page.wait_for_timeout(7000)
        print("üåê Giant Foods location selected, sending request now...")

        results = []
        for upc in upc_list:
            print(f"üîç Fetching product for UPC: {upc}")
            try:
                resp = await page.context.wait_for_event(
                    "response",
                    predicate=lambda r: "/api/v6.0/products" in r.url and r.status == 200,
                    timeout=15000
                    )
                await page.goto(f"https://giantfood.com/product-search/{upc}?semanticSearch=false",
                    timeout=30000)
                data = await resp.json()
                print(json.dumps(data, indent=2))
                response = data['response']
                product = response.get("products", []) 
                if product:
                    product = product[0]  
                    results.append({
                        'price': product['price'],
                        'upc': product['upc'],
                        'size': product['size'],
                        'name': product['name']
                    })
                else:
                    print("No response given for UPC:", upc)
            except Exception as e:
                print(f"‚ùå Error fetching UPC {upc}: {e}")
                break
            await asyncio.sleep(random.uniform(1.0, 10.0))

        
        return page

    # launch the browser and run the above page_action
    await StealthyFetcher.async_fetch(
        url="https://giantfood.com",
        headless=False,
        network_idle=True,
        block_images=False,
        disable_resources=False,
        page_action=page_action
    )




if __name__ == "__main__":
    src_data = pd.read_excel(SOURCE_DATA)
    upc_list = src_data['UPC'].tolist()
    print(f"üì¶ Found {len(upc_list)} UPCs to process.")
    asyncio.run(fetch_upc_via_playwright(upc_list))
    #asyncio.run(fetch_upc_via_playwright('009800895007', "20010"))  # Example ZIP code, change as needed
